<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Laravel中Redis相关操作</title>
      <link href="/2019/04/24/Laravel%E4%B8%ADRedis%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/04/24/Laravel%E4%B8%ADRedis%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis是什么"><a href="#Redis是什么" class="headerlink" title="Redis是什么"></a>Redis是什么</h1><blockquote><p>redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。<br>Redis 是一个高性能的key-value数据库。 redis的出现，很大程度补偿了memcached这类key/value存储的不足，在部 分场合可以对关系数据库起到很好的补充作用。它提供了Java，C/C++，C#，PHP，JavaScript，Perl，Object-C，Python，Ruby，Erlang等客户端，使用很方便。<br>Redis支持主从同步。数据可以从主服务器向任意数量的从服务器上同步，从服务器可以是关联其他从服务器的主服务器。这使得Redis可执行单层树复制。存盘可以有意无意的对数据进行写操作。由于完全实现了发布/订阅机制，使得从数据库在任何地方同步树时，可订阅一个频道并接收主服务器完整的消息发布记录。同步对读取操作的可扩展性和数据冗余很有帮助。<br>redis的官网地址，非常好记，是redis.io。（特意查了一下，域名后缀io属于国家域名，是british Indian Ocean territory，即英属印度洋领地）</p></blockquote><blockquote><p>以上内容来自<a href="https://baike.baidu.com/item/Redis/6549233" target="_blank" rel="noopener">百度百科</a></p></blockquote><h1 id="Laravel中如何去安装Redis"><a href="#Laravel中如何去安装Redis" class="headerlink" title="Laravel中如何去安装Redis"></a>Laravel中如何去安装Redis</h1><h2 id="Composer安装"><a href="#Composer安装" class="headerlink" title="Composer安装"></a>Composer安装</h2><p><code>composer require predis/predis</code></p><h2 id="配置Config文件"><a href="#配置Config文件" class="headerlink" title="配置Config文件"></a>配置Config文件</h2><p>应用的Redis配置位于配置文件 <strong>config/database.php</strong><br>这个文件中包含被应用使用的Redis服务器的Redis数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&apos;redis&apos; =&gt; [</span><br><span class="line"></span><br><span class="line">        &apos;client&apos; =&gt; &apos;predis&apos;,</span><br><span class="line"></span><br><span class="line">        &apos;default&apos; =&gt; [</span><br><span class="line">            &apos;host&apos; =&gt; env(&apos;REDIS_HOST&apos;, &apos;127.0.0.1&apos;),</span><br><span class="line">            &apos;password&apos; =&gt; env(&apos;REDIS_PASSWORD&apos;, null),</span><br><span class="line">            &apos;port&apos; =&gt; env(&apos;REDIS_PORT&apos;, 6379),</span><br><span class="line">            &apos;database&apos; =&gt; 0,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">    ],</span><br></pre></td></tr></table></figure></p><p>如若是在本地环境中搭建的Redis服务器<br>默认不需要进行变更可以直接使用</p><h1 id="Laravel中Redis常用的指令"><a href="#Laravel中Redis常用的指令" class="headerlink" title="Laravel中Redis常用的指令"></a>Laravel中Redis常用的指令</h1><h2 id="获取所有键"><a href="#获取所有键" class="headerlink" title="获取所有键"></a>获取所有键</h2><p><code>Redis::command(&#39;keys&#39;,[&#39;*&#39;]);</code></p><h2 id="获取指定键值"><a href="#获取指定键值" class="headerlink" title="获取指定键值"></a>获取指定键值</h2><p><code>Redis::get(key_name)</code></p><h2 id="设置键值"><a href="#设置键值" class="headerlink" title="设置键值"></a>设置键值</h2><p><code>Redis::set(key_name,value)</code></p><h2 id="设置键值并且设定过期时间-单位-s"><a href="#设置键值并且设定过期时间-单位-s" class="headerlink" title="设置键值并且设定过期时间(单位:s)"></a>设置键值并且设定过期时间(单位:s)</h2><p><code>Redis::setex(key_name,timeout,value)</code></p><h2 id="删除键值"><a href="#删除键值" class="headerlink" title="删除键值"></a>删除键值</h2><p><code>Redis::del(key_name)</code></p><h2 id="add操作，不会覆盖已有值"><a href="#add操作，不会覆盖已有值" class="headerlink" title="add操作，不会覆盖已有值"></a>add操作，不会覆盖已有值</h2><p><code>Redis::setnx(key_name,value)</code><br>添加成功则返回<code>True</code><br>如果已经存在该键值则返回<code>False</code></p><h2 id="自增自减-常用来计数"><a href="#自增自减-常用来计数" class="headerlink" title="自增自减 常用来计数"></a>自增自减 常用来计数</h2><p><code>Redis::incr(key_name)</code> 自增1<br><code>Reids::incrby(key_name,foot)</code> 自增foot</p><h2 id="是否存在"><a href="#是否存在" class="headerlink" title="是否存在"></a>是否存在</h2><p><code>Redis::exists(key_name)</code></p><h2 id="设置key的时效性-单位-s"><a href="#设置key的时效性-单位-s" class="headerlink" title="设置key的时效性(单位:s)"></a>设置key的时效性(单位:s)</h2><p><code>Redis::expire(key_name,timeout)</code></p><h2 id="获取剩余有效期-单位-s"><a href="#获取剩余有效期-单位-s" class="headerlink" title="获取剩余有效期(单位:s)"></a>获取剩余有效期(单位:s)</h2><p><code>Redis::ttl(key_name)</code></p><h2 id="重新设定为永久存储"><a href="#重新设定为永久存储" class="headerlink" title="重新设定为永久存储"></a>重新设定为永久存储</h2><p><code>Redis::persisit(key_name)</code></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实在Laravel中<br>Redis的实现命令与在原生PHP中的实现命令并无差异<br>但是在使用过程中的确更为方便</p>]]></content>
      
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> Redis </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发岗面试题知识</title>
      <link href="/2019/04/11/%E5%BC%80%E5%8F%91%E5%B2%97%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/04/11/%E5%BC%80%E5%8F%91%E5%B2%97%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>这篇文章是因为前段时间接到了一个360的电面<br>接到电话的时候其实是异常开心的<br>然后电面完就开始自闭了<br>深刻认识到自己的知识储备的不足<br>因此萌生了增强自身能力和知识储备的想法<br>也在博客中进行一些记录</p><p>此博文仅作部分基础知识的拓展<br>可能以后想到了更多内容也会进行更新<br>主要会分为以下几个内容来浅入各方面的知识</p><ul><li>网路知识</li><li>Linux</li><li>PHP</li><li>Python</li></ul><h1 id="网路知识"><a href="#网路知识" class="headerlink" title="网路知识"></a>网路知识</h1><p>由于开发岗位对网络的要求并不那么高，所以在此只作粗略的内容阐述</p><h2 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h2><h3 id="为什么要三次握手"><a href="#为什么要三次握手" class="headerlink" title="为什么要三次握手"></a>为什么要三次握手</h3><blockquote><p>主要是为了防止已经失效的连接请求报文突然又传送到了服务器，从而产生错误。</p></blockquote><h3 id="三次握手建立连接的过程"><a href="#三次握手建立连接的过程" class="headerlink" title="三次握手建立连接的过程"></a>三次握手建立连接的过程</h3><ol><li>第一次握手：客户端发送包至服务器，等待服务器确认</li><li>第二次握手：服务器收到包，确认客户端请求，同时发送一个包至客户端并进入Recv状态</li><li>第三次握手：客户端收到服务器的包，并向服务器发送确认包，发送完毕后，客户端和服务端进入连接状态，完成三次握手。<blockquote><p>三次握手完成后，在理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连接之前，TCP连接都将被一直保持。</p></blockquote></li></ol><h2 id="浏览器从输入URL到页面展示过程中发生了什么？"><a href="#浏览器从输入URL到页面展示过程中发生了什么？" class="headerlink" title="浏览器从输入URL到页面展示过程中发生了什么？"></a>浏览器从输入URL到页面展示过程中发生了什么？</h2><blockquote><p>在浏览器地址栏输入URL到页面展示过程大致分为以下阶段：</p><ol><li>域名解析（找到该域名所对应的IP地址）</li><li>服务器处理（找到该域名的网站）</li><li>网站处理（找到该域名所对应的文件）</li><li>浏览器处理（把文件返回浏览器）</li></ol></blockquote><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>有注册过域名的同学一定知道域名需要云解析DNS配置<br>这就引出了DNS域名系统这个概念<br>DNS是域名和IP地址对应的映射表<br>用于解析域名的IP地址<br>通过DNS服务器后，我们所输入的地址就变成了IP地址从而进行下一步的访问<br>例如：我们输入<a href="http://www.baidu.com的时候" target="_blank" rel="noopener">www.baidu.com的时候</a><br>从DNS服务器中最先找到的IP地址115.239.211.112<br>当然，这些大型站点通常都有CDN服务，这些找到的IP也并非服务器真实地址</p><h2 id="服务器处理"><a href="#服务器处理" class="headerlink" title="服务器处理"></a>服务器处理</h2><p>当我们从DNS服务器中找到IP时，我们就会请求服务器<br>服务器是一台安装了系统的机器，常见的系统有Linux和Windows Server<br>目前服务器使用的还是以Linux为主<br>系统中安装有处理请求的Web Server<br>常见的Web Server有Apache、Nginx、IIS<br>PHP通常使用的是Apache<br>通常情况下一个服务器下会部属多个网站<br>Web Server接收用户的请求并且根据请求的域名找到其对应的网站，然后把用户的请求交给该网站的代码进行处理</p><h2 id="网站处理"><a href="#网站处理" class="headerlink" title="网站处理"></a>网站处理</h2><p>现在的网站很多都是使用MVC框架来进行处理的<br>无论使用的是什么框架进行处理<br>网站处理其实经过的流程都是一致的<br><img src="https://i.loli.net/2019/04/11/5caf36153f1c3.png" alt="处理过程"><br>在处理客户端请求时，我们可能会对请求中的参数进行分析<br>连接数据库获取我们需要的内容并且通过某个编程语言来进行解释<br>从而最终返回我们预期返回的内容(例如Json、Html)</p><h2 id="浏览器处理"><a href="#浏览器处理" class="headerlink" title="浏览器处理"></a>浏览器处理</h2><p>浏览器处理的过程是一个边解析边渲染的过程<br>例如我们的网站使用的是PHP语言<br>我们在网站处理的过程中已经执行完毕了处理过程<br>最终返回的是一个HTML文档又或者是一个Json<br>浏览器处理时也有可能是直接载入Html文档或者执行js代码来分析Json从而使用<br>浏览器会载入我们所引入的css，js文件并且最终将结果展现至客户端的浏览器上</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="什么是Linux？"><a href="#什么是Linux？" class="headerlink" title="什么是Linux？"></a>什么是Linux？</h2><blockquote><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。<br>—— <a href="https://baike.baidu.com/item/linux/27050" target="_blank" rel="noopener">百度百科</a></p></blockquote><p>Linux系统因为其更加可靠的系统安全性等多方面原因，成为越来越流行的网站服务器<br>因此作为一个开发也需要了解一些Linux知识</p><h2 id="什么是LAMP？"><a href="#什么是LAMP？" class="headerlink" title="什么是LAMP？"></a>什么是LAMP？</h2><p>LAMP分别是</p><ul><li>L：Linux</li><li>A：Apache</li><li>M：Mysql（数据库）</li><li>P：PHP、Python（脚本语言）</li></ul><h2 id="如何部署LAMP环境"><a href="#如何部署LAMP环境" class="headerlink" title="如何部署LAMP环境"></a>如何部署LAMP环境</h2><p>LAMP环境的部署现在有很多方式<br>本文讲个人认为最简单的一种方式：<a href="http://www.bt.cn/" target="_blank" rel="noopener">Linux宝塔面板</a><br>宝塔面板从安装和管理上都较为方便，作为我这样的菜逼还是比较容易上手的</p><h2 id="Linux的基础指令和功能"><a href="#Linux的基础指令和功能" class="headerlink" title="Linux的基础指令和功能"></a>Linux的基础指令和功能</h2><table><thead><tr><th>指令</th><th>功能</th></tr></thead><tbody><tr><td>cd</td><td>切换目录</td></tr><tr><td>ls</td><td>list之意，用于查看文件和目录</td></tr><tr><td>grep</td><td>查找内容包含指定文本的文件</td></tr><tr><td>find</td><td>查找文件</td></tr><tr><td>cp</td><td>copy之意，复制文件和目录</td></tr><tr><td>mv</td><td>move之意，移动文件和目录</td></tr><tr><td>rm</td><td>remove之意，删除文件和目录</td></tr><tr><td>file</td><td>辨识文件类型</td></tr><tr><td>tar</td><td>常用于备份，可用来压缩和解压文件</td></tr><tr><td>cat</td><td>查看文本文件内容</td></tr><tr><td>vim</td><td>编辑文本文件内容</td></tr><tr><td>pwd</td><td>查看当前路径</td></tr><tr><td>mkdir</td><td>创建文件夹</td></tr></tbody></table><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="PHP是什么？"><a href="#PHP是什么？" class="headerlink" title="PHP是什么？"></a>PHP是什么？</h2><p>PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言。<br>PHP 是免费的，并且使用非常广泛。同时，对于像微软 ASP 这样的竞争者来说，PHP 无疑是另一种高效率的选项。</p><h2 id="PHP常见的开发框架"><a href="#PHP常见的开发框架" class="headerlink" title="PHP常见的开发框架"></a>PHP常见的开发框架</h2><p>PHP常见的框架主要有：</p><ul><li>ThinkPHP</li><li>Yii</li><li>Zend Framework</li><li>Laravel</li></ul><p>本文主要讲一下Laravel框架<br>Laravel框架是一个优雅、简洁的PHP WEB框架。<br>Laravel使用的是MVC的设计模式<br>在博客中也写了一些基础知识，可以在另一篇博文[Laravel基础知识]中查看</p><h2 id="PHP5-和-PHP7"><a href="#PHP5-和-PHP7" class="headerlink" title="PHP5 和 PHP7"></a>PHP5 和 PHP7</h2><p>这个也是我电面中被提及的一个问题<br>就我所知PHP7和PHP5相比<br>在性能上有十分大的提升<br>通过查询相关知识得知PHP7相较于PHP5性能提升有以下原因：</p><ol><li>变量存储字节减小，减少内存占用，提升变量操作速度</li><li>改善数组结构，数组元素和hash映射表被分配在同一块内存里，降低了内存占用、提升了 cpu 缓存命中率</li><li>改进了函数的调用机制，通过优化参数传递的环节，减少了一些指令，提高执行效率</li></ol><p>不过对于我这种菜鸡而言，只需要知道它提升了就好，便也没有深究其中的缘由</p><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="什么是Python"><a href="#什么是Python" class="headerlink" title="什么是Python"></a>什么是Python</h2><blockquote><p>Python是一种计算机程序设计语言。是一种面向对象的动态类型语言，最初被设计用于编写自动化脚本(shell)，随着版本的不断更新和语言新功能的添加，越来越多被用于独立的、大型项目的开发。 ——<a href="https://baike.baidu.com/item/Python/407313" target="_blank" rel="noopener">百度百科</a></p></blockquote><p>Python在现如今无论是在Web还是在脚本或者其他方面的表现都是十分的优秀<br>因此现在的需求也是越来越大的，从某个程度上也减少了PHP的市场需求</p><p>Python是一种强类型语言还是弱类型语言<br>其实一开始并不了解强弱类型的语言区别<br>一开始以为，嗯，Python不需要定义变量类型，那么它应该是一个弱类型语言吧<br>其实强类型弱类型语言只需了解以下知识便可区分：<br>强类型：不予许不同类型相加</p><blockquote><p>例如：我们将字符串’1’将数字1相加<br>弱类型语言会输出结果<br>而强类型语言则会报typeerror的错误</p></blockquote><p>因此Python是一种强类型的动态脚本语言</p><h2 id="Python的变量类型"><a href="#Python的变量类型" class="headerlink" title="Python的变量类型"></a>Python的变量类型</h2><p>Python中，基本数据类型可以分为以下几种：</p><ul><li>数字</li><li>字符串</li><li>列表</li><li>字典</li><li>集合</li><li>元祖<h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3>Python3中支持的数字类型有</li><li>int-整型</li><li>float-浮点型</li><li>bool-布尔型</li><li>fractions-分数</li><li>complex-复数</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串是由数字、字母、下划线组成的一串字符<br>例如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">"abc"</span></span><br></pre></td></tr></table></figure></p><p>则我们定义了一个名字为str的变量，其值为abc123456<br>字符串支持多种截取和处理方式<br>例如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">print(str)           <span class="comment">#输出字符串</span></span><br><span class="line">&gt;abc123456</span><br><span class="line">print(str[<span class="number">0</span>:<span class="number">-1</span>])     <span class="comment">#输出第一个到倒数第二个的所有字符</span></span><br><span class="line">&gt;abc12345</span><br><span class="line"><span class="keyword">print</span> (str[<span class="number">0</span>])       <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line">&gt;a</span><br><span class="line"><span class="keyword">print</span> (str[<span class="number">2</span>:<span class="number">5</span>])     <span class="comment"># 输出从第三个开始到第五个的字符</span></span><br><span class="line">&gt;c12</span><br><span class="line"><span class="keyword">print</span> (str[<span class="number">2</span>:])      <span class="comment"># 输出从第三个开始的后的所有字符</span></span><br><span class="line">&gt;c12345</span><br><span class="line"><span class="keyword">print</span> (str * <span class="number">2</span>)      <span class="comment"># 输出字符串两次</span></span><br><span class="line">&gt;abc123456abc123456</span><br><span class="line"><span class="keyword">print</span> (str + <span class="string">"789"</span>) <span class="comment"># 连接字符串</span></span><br><span class="line">&gt;abc123456789</span><br></pre></td></tr></table></figure></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>List（列表） 是 Python 中使用最频繁的数据类型。<br>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。<br>列表是写在方括号 [] 之间、用逗号分隔开的元素列表。<br>和字符串一样，列表同样可以被<strong>索引</strong>和截取，列表被截取后返回一个包含所需元素的新列表。<br>列表截取的语法格式如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">list = [<span class="string">'abc'</span>, <span class="number">123</span> , <span class="number">1.23</span>, <span class="string">'Wuxie'</span>]</span><br><span class="line">tinylist = [<span class="number">456</span>, <span class="string">'Wuxie'</span>]</span><br><span class="line"><span class="keyword">print</span> (list)            <span class="comment"># 输出完整列表</span></span><br><span class="line">&gt;[<span class="string">'abc'</span>, <span class="number">123</span> , <span class="number">1.23</span>, <span class="string">'Wuxie'</span>]</span><br><span class="line"><span class="keyword">print</span> (list[<span class="number">0</span>])         <span class="comment"># 输出列表第一个元素</span></span><br><span class="line">&gt;abc</span><br><span class="line"><span class="keyword">print</span> (list[<span class="number">1</span>:<span class="number">3</span>])       <span class="comment"># 从第二个开始输出到第三个元素</span></span><br><span class="line">&gt;[<span class="number">123</span>, <span class="number">1.23</span>]</span><br><span class="line"><span class="keyword">print</span> (list[<span class="number">2</span>:])        <span class="comment"># 输出从第三个元素开始的所有元素</span></span><br><span class="line">&gt;[<span class="number">123</span> , <span class="number">1.23</span>, <span class="string">'Wuxie'</span>]</span><br><span class="line"><span class="keyword">print</span> (tinylist * <span class="number">2</span>)    <span class="comment"># 输出两次列表</span></span><br><span class="line">&gt;[<span class="number">456</span>, <span class="string">'Wuxie'</span>, <span class="number">456</span>, <span class="string">'Wuxie'</span>]</span><br><span class="line"><span class="keyword">print</span> (list + tinylist) <span class="comment"># 连接列表</span></span><br><span class="line">&gt;[<span class="string">'abc'</span>, <span class="number">123</span> , <span class="number">1.23</span>, <span class="string">'Wuxie'</span>, <span class="number">456</span>, <span class="string">'Wuxie'</span>]</span><br></pre></td></tr></table></figure></p><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>元组（tuple）与列表类似，不同之处在于元组的元素不能修改。<br>元组可以用()进行创建<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tuple = (<span class="string">'abc'</span>, <span class="number">123</span>)</span><br></pre></td></tr></table></figure></p><p>和字符串以及列表一样<br>元组的内容是可以通过<strong>索引</strong>读取的，下标从0开始，-1为从末尾开始的位置</p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。<br>基本功能是进行成员关系测试和删除重复元素。<br>可以使用大括号 { } 或者 set() 函数创建集合<br>注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。<br>创建格式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parame = &#123;value1,value2,...&#125;</span><br><span class="line">parame = set()</span><br></pre></td></tr></table></figure></p><p>集合可以计算差集、并集和交集<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">student = &#123;<span class="string">'Tom'</span>, <span class="string">'Jim'</span>, <span class="string">'Mary'</span>, <span class="string">'Tom'</span>, <span class="string">'Jack'</span>, <span class="string">'Rose'</span>&#125;</span><br><span class="line">print(student)   <span class="comment"># 输出集合，重复的元素被自动去掉</span></span><br><span class="line">&gt;&#123;<span class="string">'Jim'</span>, <span class="string">'Rose'</span>, <span class="string">'Mary'</span>, <span class="string">'Tom'</span>, <span class="string">'Jack'</span>&#125;</span><br><span class="line"><span class="comment"># set可以进行集合运算</span></span><br><span class="line">a = set(<span class="string">'abracadabra'</span>)</span><br><span class="line">b = set(<span class="string">'alacazam'</span>)</span><br><span class="line">print(a)</span><br><span class="line">&gt;&#123;<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'r'</span>, <span class="string">'d'</span>, <span class="string">'c'</span>&#125;</span><br><span class="line">print(b)</span><br><span class="line">&gt;&#123;<span class="string">'a'</span>, <span class="string">'z'</span>, <span class="string">'l'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>&#125;</span><br><span class="line">print(a - b)     <span class="comment"># a 和 b 的差集</span></span><br><span class="line">&gt;&#123;<span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'r'</span>&#125;</span><br><span class="line">print(a | b)     <span class="comment"># a 和 b 的并集</span></span><br><span class="line">&gt;&#123;<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'r'</span>, <span class="string">'z'</span>, <span class="string">'d'</span>, <span class="string">'l'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>&#125;</span><br><span class="line">print(a &amp; b)     <span class="comment"># a 和 b 的交集</span></span><br><span class="line">&gt;&#123;<span class="string">'a'</span>, <span class="string">'c'</span>&#125;</span><br><span class="line">print(a ^ b)     <span class="comment"># a 和 b 中不同时存在的元素(对称差)</span></span><br><span class="line">&gt;&#123;<span class="string">'b'</span>, <span class="string">'l'</span>, <span class="string">'d'</span>, <span class="string">'r'</span>, <span class="string">'z'</span>, <span class="string">'m'</span>&#125;</span><br></pre></td></tr></table></figure></p><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><p>例如我们当前有一个集合 s<br>我们可以使用以下语法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.add()</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.update()</span><br></pre></td></tr></table></figure></p><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><p>将元素从集合 s 中移除，如果元素不存在，则会发生错误。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.remove()</span><br></pre></td></tr></table></figure></p><p>或者随机删除一个元素(挑选一位幸运观众)并且返回删除的元素内容<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.pop()</span><br></pre></td></tr></table></figure></p><h3 id="计算元素个数"><a href="#计算元素个数" class="headerlink" title="计算元素个数"></a>计算元素个数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(s)</span><br></pre></td></tr></table></figure><h3 id="清空集合"><a href="#清空集合" class="headerlink" title="清空集合"></a>清空集合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.clear()</span><br></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典（dictionary）是Python中另一个非常有用的内置数据类型。<br>列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。<br>字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。<br>键(key)必须使用不可变类型。<br>在同一个字典中，键(key)必须是唯一的。<br>例如我们创建一个字典 dict<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dict = &#123;&#125;</span><br><span class="line">dict[<span class="number">0</span>] = <span class="string">"0的内容"</span></span><br><span class="line">dict[<span class="string">'zero'</span>] = <span class="string">"zero的内容"</span></span><br></pre></td></tr></table></figure></p><blockquote><p>这里需要注意的是，dict[0]中的0并不是索引下标，而是作为key进行存储</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(dict[<span class="number">0</span>])        <span class="comment">#此处输出的是key为字典dict中key为0的value值</span></span><br><span class="line">&gt;<span class="number">0</span>的内容</span><br><span class="line">print(dict.keys())      <span class="comment">#输出所有键</span></span><br><span class="line">&gt;dict_keys([<span class="number">0</span>, <span class="string">'zero'</span>])</span><br><span class="line">print(dict.values())    <span class="comment">#输出所有值</span></span><br><span class="line">&gt;dict_values([<span class="string">'0的内容'</span>, <span class="string">'zero的内容'</span>])</span><br></pre></td></tr></table></figure><h2 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h2><p>在Python3中 可以使用下标来查看内容的有以下几种数据类型</p><ol><li>字符串</li><li>列表</li><li>元组(亦可以理解为数组)</li></ol><h1 id="常用的技术论坛"><a href="#常用的技术论坛" class="headerlink" title="常用的技术论坛"></a>常用的技术论坛</h1><ul><li><a href="https://bbs.csdn.net/" target="_blank" rel="noopener">CSDN</a></li><li><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a></li><li><a href="https://github.com/" target="_blank" rel="noopener">github</a></li><li><a href="http://www.w3school.com.cn" target="_blank" rel="noopener">W3CSchool</a></li><li><a href="http://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a></li><li>……</li></ul><h1 id="全篇总结"><a href="#全篇总结" class="headerlink" title="全篇总结"></a>全篇总结</h1><p>人总归是要进步的<br>虽然我现在还是个菜逼<br>但我以后也可能就是一个大菜逼了<br>菜逼一时爽，一直菜逼一直爽</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
          <category> PHP </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 面试 </tag>
            
            <tag> Python </tag>
            
            <tag> 网络知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BiliBiliApi</title>
      <link href="/2019/04/10/BiliBiliApi/"/>
      <url>/2019/04/10/BiliBiliApi/</url>
      
        <content type="html"><![CDATA[<h1 id="BiliBili-API-说明"><a href="#BiliBili-API-说明" class="headerlink" title="BiliBili API 说明"></a>BiliBili API 说明</h1><p>此文档主要为 直播区 的API<br>主要有以下API：</p><ul><li>获取信息</li><li>获取直播区经验(心跳)</li><li>双端登录任务</li><li>签到</li><li>赠送礼物</li><li>银瓜子换硬币</li><li>瓜子宝箱</li><li>勋章领取</li></ul><h1 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h1><h2 id="获取直播区个人信息"><a href="#获取直播区个人信息" class="headerlink" title="获取直播区个人信息"></a>获取直播区个人信息</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/i/api/liveinfo" target="_blank" rel="noopener">https://api.live.bilibili.com/i/api/liveinfo</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：</p><blockquote><p>返回内容过多，请自行调试</p></blockquote><h2 id="获取背包内的礼物信息"><a href="#获取背包内的礼物信息" class="headerlink" title="获取背包内的礼物信息"></a>获取背包内的礼物信息</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/gift/v2/gift/bag_list" target="_blank" rel="noopener">https://api.live.bilibili.com/gift/v2/gift/bag_list</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：</p><blockquote><p>返回内容过多，请自行调试</p></blockquote><h1 id="获取直播区经验-心跳"><a href="#获取直播区经验-心跳" class="headerlink" title="获取直播区经验(心跳)"></a>获取直播区经验(心跳)</h1><p>直播区获取经验分为手机端和Pc端<br>获取经验与双端登录相关，见下</p><h2 id="Pc端口"><a href="#Pc端口" class="headerlink" title="Pc端口"></a>Pc端口</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/User/userOnlineHeart" target="_blank" rel="noopener">https://api.live.bilibili.com/User/userOnlineHeart</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:0,</span><br><span class="line">&quot;msg&quot;:&quot;OK&quot;,</span><br><span class="line">&quot;message&quot;:&quot;OK&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">&#123;</span><br><span class="line">&quot;giftlist&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="手机端口"><a href="#手机端口" class="headerlink" title="手机端口"></a>手机端口</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/mobile/userOnlineHeart" target="_blank" rel="noopener">https://api.live.bilibili.com/mobile/userOnlineHeart</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:0,</span><br><span class="line">&quot;msg&quot;:&quot;OK&quot;,</span><br><span class="line">&quot;message&quot;:&quot;OK&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">&#123;</span><br><span class="line">&quot;giftlist&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="双端登录任务"><a href="#双端登录任务" class="headerlink" title="双端登录任务"></a>双端登录任务</h1><p>双端登录任务分为查询和领取奖励<br>与获取直播间经验相关，见上</p><h2 id="双端登录任务查询"><a href="#双端登录任务查询" class="headerlink" title="双端登录任务查询"></a>双端登录任务查询</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/YearWelfare/platformLoginTask" target="_blank" rel="noopener">https://api.live.bilibili.com/YearWelfare/platformLoginTask</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:0,</span><br><span class="line">&quot;msg&quot;:&quot;ok&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">&#123;</span><br><span class="line">&quot;mobile_login&quot;:0,</span><br><span class="line">&quot;web_login&quot;:0</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##双端任务奖励领取<br>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/activity/v1/task/receive_award" target="_blank" rel="noopener">https://api.live.bilibili.com/activity/v1/task/receive_award</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>task_id</td><td>double_watch_task</td><td>任务指令</td></tr><tr><td>csrf_token</td><td></td><td>校验csrf</td></tr></tbody></table><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:-400,</span><br><span class="line">&quot;msg&quot;:&quot;奖励已领取&quot;,</span><br><span class="line">&quot;message&quot;:&quot;奖励已领取&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>直播区签到可以获取签到奖励，累积签到天数<br>应援团签到可以获得亲密度奖励</p><h2 id="直播区签到"><a href="#直播区签到" class="headerlink" title="直播区签到"></a>直播区签到</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/sign/doSign" target="_blank" rel="noopener">https://api.live.bilibili.com/sign/doSign</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:-500,</span><br><span class="line">&quot;msg&quot;:&quot;今天已签到过&quot;,</span><br><span class="line">&quot;message&quot;:&quot;今天已签到过&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="应援团签到"><a href="#应援团签到" class="headerlink" title="应援团签到"></a>应援团签到</h2><h3 id="获取应援团列表"><a href="#获取应援团列表" class="headerlink" title="获取应援团列表"></a>获取应援团列表</h3><p>请求地址：</p><blockquote><p><a href="https://api.vc.bilibili.com/link_group/v1/member/my_groups" target="_blank" rel="noopener">https://api.vc.bilibili.com/link_group/v1/member/my_groups</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>access_key</td><td>token</td><td>用户的token值</td></tr></tbody></table><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：</p><blockquote><p>返回内容过多，请自行调试</p></blockquote><h3 id="应援团签到-1"><a href="#应援团签到-1" class="headerlink" title="应援团签到"></a>应援团签到</h3><p>请求地址：</p><blockquote><p><a href="https://api.vc.bilibili.com//link_setting/v1/link_setting/sign_in" target="_blank" rel="noopener">https://api.vc.bilibili.com//link_setting/v1/link_setting/sign_in</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>access_key</td><td>token</td><td>用户的token值</td></tr><tr><td>group_id</td><td></td><td>应援团id</td></tr><tr><td>owner_id</td><td></td><td>主播Uid</td></tr></tbody></table><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:710001,</span><br><span class="line">&quot;msg&quot;:&quot;应援失败&gt;_&lt;&quot;,</span><br><span class="line">&quot;message&quot;:&quot;应援失败&gt;_&lt;&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="赠送礼物"><a href="#赠送礼物" class="headerlink" title="赠送礼物"></a>赠送礼物</h1><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/gift/v2/live/bag_send" target="_blank" rel="noopener">https://api.live.bilibili.com/gift/v2/live/bag_send</a></p></blockquote><p>请求方式:</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>uid</td><td></td><td>用户Uid</td></tr><tr><td>gift_id</td><td></td><td>礼物Id</td></tr><tr><td>ruid</td><td></td><td>主播Id</td></tr><tr><td>gift_num</td><td></td><td>赠送数量</td></tr><tr><td>bag_id</td><td></td><td>背包中的礼物Id(见获取信息)</td></tr><tr><td>platform</td><td></td><td>礼物赠送端</td></tr><tr><td>biz_code</td><td>live</td><td></td></tr><tr><td>biz_id</td><td></td><td>用户Uid</td></tr><tr><td>rnd</td><td></td><td>时间戳</td></tr><tr><td>storm_beat_id</td><td>0</td><td>风暴</td></tr><tr><td>metadata</td><td></td><td>Null</td></tr><tr><td>price</td><td></td><td>价格</td></tr><tr><td>csrf_token</td><td></td><td>csrf</td></tr><tr><td>csrf</td><td></td><td>csrf</td></tr><tr><td>visit_id</td><td></td><td>Null</td></tr></tbody></table><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：</p><blockquote><p>返回内容过多，请自行调试</p></blockquote><h1 id="银瓜子换硬币"><a href="#银瓜子换硬币" class="headerlink" title="银瓜子换硬币"></a>银瓜子换硬币</h1><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/pay/v1/Exchange/silver2coin" target="_blank" rel="noopener">https://api.live.bilibili.com/pay/v1/Exchange/silver2coin</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>platform</td><td>pc</td><td>平台</td></tr><tr><td>csrf_token</td><td></td><td>csrf值</td></tr></tbody></table><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:403,</span><br><span class="line">&quot;msg&quot;:&quot;每天最多能兑换 1 个&quot;,</span><br><span class="line">&quot;message&quot;:&quot;每天最多能兑换 1 个&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="瓜子宝箱任务"><a href="#瓜子宝箱任务" class="headerlink" title="瓜子宝箱任务"></a>瓜子宝箱任务</h1><h2 id="任务领取"><a href="#任务领取" class="headerlink" title="任务领取"></a>任务领取</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/mobile/freeSilverCurrentTask" target="_blank" rel="noopener">https://api.live.bilibili.com/mobile/freeSilverCurrentTask</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:0,</span><br><span class="line">&quot;msg&quot;:&quot;&quot;,</span><br><span class="line">&quot;message&quot;:&quot;&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">&#123;</span><br><span class="line">&quot;minute&quot;:3,</span><br><span class="line">&quot;silver&quot;:30,</span><br><span class="line">&quot;time_start&quot;:1554836501,</span><br><span class="line">&quot;time_end&quot;:1554836681,</span><br><span class="line">&quot;times&quot;:1,</span><br><span class="line">&quot;max_times&quot;:5</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="领取宝箱奖励（手机端）"><a href="#领取宝箱奖励（手机端）" class="headerlink" title="领取宝箱奖励（手机端）"></a>领取宝箱奖励（手机端）</h2><p>请求地址：</p><blockquote><p><a href="https://api.live.bilibili.com/mobile/freeSilverAward" target="_blank" rel="noopener">https://api.live.bilibili.com/mobile/freeSilverAward</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>access_key</td><td></td><td>用户的token值</td></tr><tr><td>actionKey</td><td></td><td>appkey</td></tr><tr><td>appkey</td><td></td><td>appkey</td></tr><tr><td>build</td><td></td><td>版本号</td></tr><tr><td>device</td><td>android</td><td>平台</td></tr><tr><td>mobi_app</td><td></td><td>软件名</td></tr><tr><td>platform</td><td>android</td><td>平台</td></tr><tr><td>time_end</td><td></td><td>任务结束时间(见上)</td></tr><tr><td>time_start</td><td></td><td>任务开始时间(见上)</td></tr></tbody></table><p>返回格式：</p><blockquote><p>Json</p></blockquote><p>返回示例（我被禁止辽）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:400,</span><br><span class="line">&quot;msg&quot;:&quot;访问被拒绝&quot;,</span><br><span class="line">&quot;message&quot;:&quot;访问被拒绝&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="勋章领取"><a href="#勋章领取" class="headerlink" title="勋章领取"></a>勋章领取</h1><p>赠送一个B克拉(9900金瓜子)可以领取勋章，是对主播认可的一种方式<br>那这里就讲讲银瓜子或者硬币领取勋章的方式吧<br>请求地址：</p><blockquote><p><a href="https://api.vc.bilibili.com/link_group/v1/member/buy_medal" target="_blank" rel="noopener">https://api.vc.bilibili.com/link_group/v1/member/buy_medal</a></p></blockquote><p>请求方式：</p><blockquote><p>Get<br>Post</p></blockquote><p>请求参数：</p><table><thead><tr><th>Param</th><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>coin_type</td><td></td><td>类型:可选硬币(metal)和银瓜子(silver)</td></tr><tr><td>master_uid</td><td></td><td>主播Uid</td></tr><tr><td>platform</td><td>android</td><td>平台</td></tr></tbody></table><p>返回类型：</p><blockquote><p>Json</p></blockquote><p>返回示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;code&quot;:-1,</span><br><span class="line">&quot;msg&quot;:&quot;用户已经领取了该主播的勋章，不能再次领取&quot;,</span><br><span class="line">&quot;message&quot;:&quot;用户已经领取了该主播的勋章，不能再次领取&quot;,</span><br><span class="line">&quot;data&quot;:</span><br><span class="line">[</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="To-Do-List"><a href="#To-Do-List" class="headerlink" title="To Do List"></a>To Do List</h1><p>当前发布的内容仅为部分内容<br>更多API还在收集和统计中<br>可能会在之后进行更新和整理<br>大家也可以提供API地址来补充完善<br>感谢大家哦~</p>]]></content>
      
      
      <categories>
          
          <category> BiliBili </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BiliBili </tag>
            
            <tag> Api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel基础知识</title>
      <link href="/2019/04/09/Laravel%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/04/09/Laravel%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Laravel-简介"><a href="#Laravel-简介" class="headerlink" title="Laravel 简介"></a>Laravel 简介</h1><p>Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。它可以让你从面条一样杂乱的代码中解脱出来；它可以帮你构建一个完美的网络APP，而且每行代码都可以简洁、富于表达力。<br>Laravel也是目前最为主流的PHP框架<br><a href="https://baike.baidu.com/item/Laravel/5996666" target="_blank" rel="noopener">点我进入百度百科</a></p><h1 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h1><p>俗话说：男怕选错行，女怕嫁错郎。<br>一个程序的版本选择也一样决定命运<br>当前笔记以 Laravel 5.4 为基础开展<br>更多版本请查看<a href="https://laravel.com/" target="_blank" rel="noopener">Laravel官网</a></p><h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul><li>PHP版本 &gt;= 5.6.4</li><li>PHP扩展：OpenSSL</li><li>PHP扩展：PDO</li><li>PHP扩展：Mbstring</li><li>PHP扩展：Tokenizer</li><li>PHP扩展：XML</li></ul><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>环境配置主要涉及PHP环境以及Composer依赖</p><h2 id="PHP环境"><a href="#PHP环境" class="headerlink" title="PHP环境"></a>PHP环境</h2><p>笔者使用的环境是Windows，选用了<a href="http://phpstudy.php.cn/" target="_blank" rel="noopener">PhpStudy</a>来搭建集成开发环境<br>选用的Version为php-7.0.12-nts + Apache<br>最终项目上线使用的是Centos 7.3系统 利用<a href="http://www.bt.cn/" target="_blank" rel="noopener">宝塔面板</a>进行管理以及php环境的搭建</p><h2 id="Composer安装"><a href="#Composer安装" class="headerlink" title="Composer安装"></a>Composer安装</h2><ol><li>进入<a href="https://getcomposer.org/download/" target="_blank" rel="noopener">Composer官网</a>选取适应自己系统的版本进行下载并安装<blockquote><p>Windows系统可以直接下载并运行<a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener">Composer-Setup.exe</a> 随后一直Next直至Finish即可</p></blockquote></li><li>确认安装情况<br>打开命令提示符，输入命令 <code>composer -v</code><br>看到如图则代表安装成功<br><img src="https://i.loli.net/2019/04/09/5cabe977a04ec.png" alt="Composer"></li></ol><h1 id="安装-Laravel"><a href="#安装-Laravel" class="headerlink" title="安装 Laravel"></a>安装 Laravel</h1><h2 id="创建指定版本的Laravel项目"><a href="#创建指定版本的Laravel项目" class="headerlink" title="创建指定版本的Laravel项目"></a>创建指定版本的Laravel项目</h2><p>在要创建Laravel项目的目录下运行cmd或cd至创建目录下<br>例：创建一个版本为5.4的blog项目，使用以下命令<br><code>composer create-project --prefer-dist laravel/laravel blog 5.4.*</code></p><h1 id="常用的文件目录"><a href="#常用的文件目录" class="headerlink" title="常用的文件目录"></a>常用的文件目录</h1><ul><li>配置文件：<code>/.env</code></li><li>css、Js：<code>/public/</code></li><li>路由：<code>/routes/</code></li><li>控制器： <code>/app/Http/Controllers/</code></li><li>视图： <code>/resources/views/</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
